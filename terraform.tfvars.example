# DigitalOcean API token
do_token = "your_token"

# Admin password to access Rancher
admin_password = "adminadminadmin"

# Resources will be prefixed with this to avoid clashing names
prefix = "myname"

# Registry for the rancher and rancher-agent images. If blank or the image cannot be pulled from the registry, it will fall back to Docker Hub
rancher_registry = ""

# rancher/rancher image tag to use
rancher_version = "v2.7.9"

# Rancher server audit log level (0-3)
audit_level = 0

# Extra arguments for rancher/rancher container
rancher_args = ""

#rancher_args = "--debug"
# Region where server should be created
region_server = "lon1"

# Region where agent(s) should be created
region_agent = "lon1"

# Count of RKE1 custom cluster nodes with all roles
count_agent_all_nodes = "1"

# Count of RKE1 custom cluster nodes with etcd and controlplane roles
count_agent_master_nodes = "0"

# Count of RKE1 custom cluster nodes with role etcd
count_agent_etcd_nodes = "0"

# Count of RKE1 custom cluster nodes with role controlplane
count_agent_controlplane_nodes = "0"

# Count of RKE1 custom cluster nodes with role worker
count_agent_worker_nodes = "0"

# Count of tools nodes
count_tools_nodes = "0"

# Count of RKE2 custom cluster nodes with all roles
count_rke2_agent_all_nodes = "1"

# Count of RKE2 custom cluster nodes with etcd and controlplane roles
count_rke2_agent_master_nodes = "0"

# Count of RKE2 custom cluster nodes with role etcd
count_rke2_agent_etcd_nodes = "0"

# Count of RKE2 custom cluster nodes with role controlplane
count_rke2_agent_controlplane_nodes = "0"

# Count of RKE2 custom cluster nodes with role worker
count_rke2_agent_worker_nodes = "0"

# Docker version of host running `rancher/rancher`
docker_version_server = "24.0"

# Docker version of host being added to a cluster (running `rancher/rancher-agent`)
docker_version_agent = "24.0"

# Docker root on agent nodes
docker_root = ""

# K8s version of RKE custom cluster
#k8s_version = ""

# K8s version of RKE2 custom cluster
#k8s_rke2_version = ""

# CNI for the RKE cluster
rke_cni = "canal"

# CNI for the RKE2 cluster
rke2_cni ="calico"

# Droplet sizes
all_size = "s-4vcpu-8gb"

master_size = "s-4vcpu-8gb"

etcd_size = "s-4vcpu-8gb"

controlplane_size = "s-4vcpu-8gb"

worker_size = "s-4vcpu-8gb"

tools_size = "s-4vcpu-8gb"

# Image of host running `rancher/rancher`
image_server = "ubuntu-22-04-x64"

# Image of host being added to a cluster (running `rancher/rancher-agent`)
image_agent = "ubuntu-22-04-x64"

# Image for host running tools
image_tools = "ubuntu-22-04-x64"

## User for server image
user_server = "root"

## User for agent image
user_agent = "root"

## User for tools image
user_tools = "root"

## Kernel parameters for server
kernel_nf_conntrack_max = "131072"

## Hardening RKE2 Downstream cluster 
hardening = ""

## Hardening profile (possible values are cis or cis-1.23)
profile = ""

## defaultPodSecurityAdmissionConfigurationTemplateName (possible values are null, rancher-privileged, rancher-restricted)
psact = ""

# DigitalOcean ssh-keyid
# ssh_keys = [ "your_key_id" ]
# Retrieve using (max 200 keys in account): `curl -s -X GET -H "Content-Type: application/json" -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" "https://api.digitalocean.com/v2/account/keys?per_page=200"  | jq -r '.ssh_keys[] | select(.name=="YOUR_KEY_NAME") | .id'`
# If you have more than 200 keys in your account, use: `doctl -t $DIGITALOCEAN_TOKEN compute ssh-key list | grep YOUR_KEY_NAME | awk '{ print $1 }'`
# If this is not specified, you will get an email with the root password
ssh_keys = []
